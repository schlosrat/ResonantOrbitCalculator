<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <LangVersion>latest</LangVersion>
        <ImplicitUsings>true</ImplicitUsings>
        <AssemblyName>com.github.schlosrat.resonant_orbit_calculator</AssemblyName>
        <Product>Resonant Orbit Calculator</Product>
        <Description>Calculates resonant orbits for the selected vessel and assit with setting up maneuver nodes to enter the resonant orbit</Description>
        <Version Label="Version of the mod">0.5.0</Version>
        <RestoreAdditionalProjectSources>
			https://nuget.spacewarp.org/v3/index.json
		</RestoreAdditionalProjectSources>
        <RootNamespace>ResonantOrbitCalculator</RootNamespace>
        <ModId Condition="'$(ModId)'==''">resonant_orbit_calculator</ModId>
        <PackageLicenseFile>license</PackageLicenseFile>
	</PropertyGroup>
	<ItemGroup>
		<None Include="..\README.md" Pack="true" PackagePath="" />
	</ItemGroup>
    <ItemGroup>
        <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all" />
        <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.0" PrivateAssets="all" />
        <PackageReference Include="BepInEx.Core" Version="5.*" />
        <PackageReference Include="BepInEx.PluginInfoProps" Version="2.*" />
        <PackageReference Include="HarmonyX" Version="2.10.1" />
        <PackageReference Include="SpaceWarp" Version="1.1.1" />
        <PackageReference Include="UnityEngine.Modules" Version="2020.3.33" IncludeAssets="compile" />
    </ItemGroup>
    <ItemGroup>
      <None Include="..\license">
        <Pack>True</Pack>
        <PackagePath>\</PackagePath>
      </None>
    </ItemGroup>
    <ItemGroup>
        <Reference Include="Assembly-CSharp">
            <HintPath>..\external_dlls\Assembly-CSharp.dll</HintPath>
            <Publicize>true</Publicize>
            <Private>false</Private>
        </Reference>
		<Reference Include="flight_plan">
			<HintPath>..\external_dlls\flight_plan.dll</HintPath>
			<Private>false</Private>
		</Reference>
		<Reference Include="node_manager">
			<HintPath>..\external_dlls\node_manager.dll</HintPath>
			<Private>false</Private>
		</Reference>
		<Reference Include="maneuver_node_controller">
			<HintPath>..\external_dlls\maneuver_node_controller.dll</HintPath>
			<Private>false</Private>
		</Reference>
		<Reference Include="K2D2">
			<HintPath>..\external_dlls\K2D2.dll</HintPath>
			<Private>false</Private>
		</Reference>
    </ItemGroup>
    <Target Name="PostBuild" AfterTargets="PostBuildEvent">
        <Exec Command="REM copy dll, pdb images infos ands readme to the Debug or Release Dir&#xD;&#xA;&#xD;&#xA;ECHO off&#xD;&#xA;SET DEST_DIR=$(ProjectDir)..\$(ConfigurationName)&#xD;&#xA;&#xD;&#xA;if not exist &quot;%25DEST_DIR%25&quot; rmdir /s /q &quot;%25DEST_DIR%25&quot;&#xD;&#xA;if not exist &quot;%25DEST_DIR%25&quot; mkdir &quot;%25DEST_DIR%25&quot;&#xD;&#xA;&#xD;&#xA;echo d | xcopy /y /s &quot;$(ProjectDir)..\$(ModId)\&quot; &quot;%25DEST_DIR%25\BepInEx\plugins\$(ModId)\&quot;&#xD;&#xA;echo f | xcopy /y &quot;$(TargetPath)&quot; &quot;%25DEST_DIR%25\BepInEx\plugins\$(ModId)\$(ModId).dll&quot;&#xD;&#xA;if $(ConfigurationName) == Debug echo f | xcopy /y &quot;$(TargetDir)$(TargetName).pdb&quot; &quot;%25DEST_DIR%25\BepInEx\plugins\$(ModId)\$(ModId).pdb&quot;&#xD;&#xA;xcopy /y &quot;$(ProjectDir)..\LICENSE.md&quot; &quot;%25DEST_DIR%25\BepInEx\plugins\$(ModId)\&quot;&#xD;&#xA;echo f | xcopy /y &quot;$(ProjectDir)..\README.md&quot; &quot;%25DEST_DIR%25\BepInEx\plugins\$(ModId)\README.txt&quot;&#xD;&#xA;&#xD;&#xA;cd $(ProjectDir)..\batches&#xD;&#xA;call post_build.bat $(ConfigurationName) $(ModId)" />
    </Target>
</Project>
